<?xml version="1.0"?>
<!--Phoronix Test Suite v10.8.4-->
<PhoronixTestSuite>
  <SuiteInformation>
    <Title>non-python-optimizable</Title>
    <Version>1.0.0</Version>
    <TestType>Processor</TestType>
    <Description>A test suite that does not use unoptimized python wheels or prebuilt binarie</Description>
    <Maintainer>Shane McKee</Maintainer>
  </SuiteInformation>
  <Execute>
    <Test>pts/mnn-2.1.0</Test>
  </Execute>
  <Execute>
    <Test>pts/rnnoise-1.0.2</Test>
  </Execute>
  <Execute>
    <Test>pts/tnn-1.1.0</Test>
    <Arguments>-dt NAIVE -mp ../benchmark/benchmark-model/densenet.tnnproto</Arguments>
    <Description>Target: CPU - Model: DenseNet</Description>
  </Execute>
  <Execute>
    <Test>pts/tnn-1.1.0</Test>
    <Arguments>-dt NAIVE -mp ../benchmark/benchmark-model/mobilenet_v2.tnnproto</Arguments>
    <Description>Target: CPU - Model: MobileNet v2</Description>
  </Execute>
  <Execute>
    <Test>pts/tnn-1.1.0</Test>
    <Arguments>-dt NAIVE -mp ../benchmark/benchmark-model/squeezenet_v1.1.tnnproto</Arguments>
    <Description>Target: CPU - Model: SqueezeNet v1.1</Description>
  </Execute>
  <Execute>
    <Test>pts/tnn-1.1.0</Test>
    <Arguments>-dt NAIVE -mp ../benchmark/benchmark-model/shufflenet_v2.tnnproto</Arguments>
    <Description>Target: CPU - Model: SqueezeNet v2</Description>
  </Execute>
  <Execute>
    <Test>pts/gl-vs-vk-1.0.0</Test>
    <Arguments>-t 1 -api gl -m</Arguments>
    <Description>Test: Static Scene - API: OpenGL - Multi-Threaded: Yes</Description>
  </Execute>
  <Execute>
    <Test>pts/gl-vs-vk-1.0.0</Test>
    <Arguments>-t 1 -api vk -m</Arguments>
    <Description>Test: Static Scene - API: Vulkan - Multi-Threaded: Yes</Description>
  </Execute>
  <Execute>
    <Test>pts/gl-vs-vk-1.0.0</Test>
    <Arguments>-t 2 -api gl -m</Arguments>
    <Description>Test: Terrain With Dynamic LoD - API: OpenGL - Multi-Threaded: Yes</Description>
  </Execute>
  <Execute>
    <Test>pts/gl-vs-vk-1.0.0</Test>
    <Arguments>-t 2 -api vk -m</Arguments>
    <Description>Test: Terrain With Dynamic LoD - API: Vulkan - Multi-Threaded: Yes</Description>
  </Execute>
  <Execute>
    <Test>pts/gl-vs-vk-1.0.0</Test>
    <Arguments>-t 3 -api gl -m</Arguments>
    <Description>Test: Shadow Mapping - API: OpenGL - Multi-Threaded: Yes</Description>
  </Execute>
  <Execute>
    <Test>pts/gl-vs-vk-1.0.0</Test>
    <Arguments>-t 3 -api vk -m</Arguments>
    <Description>Test: Shadow Mapping - API: Vulkan - Multi-Threaded: Yes</Description>
  </Execute>
  <Execute>
    <Test>pts/glmark2-1.4.0</Test>
    <Arguments>-s 1920x1080</Arguments>
    <Description>Resolution: 1920 x 1080</Description>
  </Execute>
  <Execute>
    <Test>pts/jxrendermark-1.2.4</Test>
    <Arguments>2 1024</Arguments>
    <Description>Test: Rects Composition - Size: 1024x1024</Description>
  </Execute>
  <Execute>
    <Test>pts/jxrendermark-1.2.4</Test>
    <Arguments>3 1024</Arguments>
    <Description>Test: Put Composition - Size: 1024x1024</Description>
  </Execute>
  <Execute>
    <Test>pts/jxrendermark-1.2.4</Test>
    <Arguments>8 1024</Arguments>
    <Description>Test: Simple Blit - Size: 1024x1024</Description>
  </Execute>
  <Execute>
    <Test>pts/jxrendermark-1.2.4</Test>
    <Arguments>9 1024</Arguments>
    <Description>Test: Transformed Blit Linear - Size: 1024x1024</Description>
  </Execute>
  <Execute>
    <Test>pts/jxrendermark-1.2.4</Test>
    <Arguments>10 1024</Arguments>
    <Description>Test: Transformed Blit Bilinear - Size: 1024x1024</Description>
  </Execute>
  <Execute>
    <Test>pts/jxrendermark-1.2.4</Test>
    <Arguments>11 1024</Arguments>
    <Description>Test: Transformed Texture Paint - Size: 1024x1024</Description>
  </Execute>
  <Execute>
    <Test>pts/jxrendermark-1.2.4</Test>
    <Arguments>12 1024</Arguments>
    <Description>Test: Linear Gradient Blend - Size: 1024x1024</Description>
  </Execute>
  <Execute>
    <Test>pts/jxrendermark-1.2.4</Test>
    <Arguments>13 1024</Arguments>
    <Description>Test: Radial Gradient Paint - Size: 1024x1024</Description>
  </Execute>
  <Execute>
    <Test>pts/jxrendermark-1.2.4</Test>
    <Arguments>14 1024</Arguments>
    <Description>Test: Gradient+Temp Texture - Size: 1024x1024</Description>
  </Execute>
  <Execute>
    <Test>pts/jxrendermark-1.2.4</Test>
    <Arguments>15 1024</Arguments>
    <Description>Test: 12pt Text Grayscale - Size: 1024x1024</Description>
  </Execute>
  <Execute>
    <Test>pts/jxrendermark-1.2.4</Test>
    <Arguments>16 1024</Arguments>
    <Description>Test: 12pt Text LCD - Size: 1024x1024</Description>
  </Execute>
  <Execute>
    <Test>pts/mixbench-1.1.1</Test>
    <Arguments>mixbench-ocl-ro SPGFLOPS</Arguments>
    <Description>Backend: OpenCL - Benchmark: Single Precision</Description>
  </Execute>
  <Execute>
    <Test>pts/mixbench-1.1.1</Test>
    <Arguments>mixbench-ocl-ro DPGFLOPS</Arguments>
    <Description>Backend: OpenCL - Benchmark: Double Precision</Description>
  </Execute>
  <Execute>
    <Test>pts/mixbench-1.1.1</Test>
    <Arguments>mixbench-ocl-ro HPGFLOPS</Arguments>
    <Description>Backend: OpenCL - Benchmark: Half Precision</Description>
  </Execute>
  <Execute>
    <Test>pts/mixbench-1.1.1</Test>
    <Arguments>mixbench-ocl-ro GIOPS</Arguments>
    <Description>Backend: OpenCL - Benchmark: Integer</Description>
  </Execute>
  <Execute>
    <Test>pts/opencv-1.3.0</Test>
    <Arguments>dnn</Arguments>
    <Description>Test: DNN - Deep Neural Network</Description>
  </Execute>
  <Execute>
    <Test>pts/opencv-1.3.0</Test>
    <Arguments>features2d</Arguments>
    <Description>Test: Features 2D</Description>
  </Execute>
  <Execute>
    <Test>pts/opencv-1.3.0</Test>
    <Arguments>objdetect</Arguments>
    <Description>Test: Object Detection</Description>
  </Execute>
  <Execute>
    <Test>pts/opencv-1.3.0</Test>
    <Arguments>core</Arguments>
    <Description>Test: Core</Description>
  </Execute>
  <Execute>
    <Test>pts/opencv-1.3.0</Test>
    <Arguments>gapi</Arguments>
    <Description>Test: Graph API</Description>
  </Execute>
  <Execute>
    <Test>pts/opencv-1.3.0</Test>
    <Arguments>imgproc</Arguments>
    <Description>Test: Image Processing</Description>
  </Execute>
  <Execute>
    <Test>pts/opencv-1.3.0</Test>
    <Arguments>stitching</Arguments>
    <Description>Test: Stitching</Description>
  </Execute>
  <Execute>
    <Test>pts/opencv-1.3.0</Test>
    <Arguments>video</Arguments>
    <Description>Test: Video</Description>
  </Execute>
  <Execute>
    <Test>pts/qgears2-1.0.1</Test>
    <Arguments>-image GEARSFANCY</Arguments>
    <Description>Rendering: CPU-based Raster - Test: Gears</Description>
  </Execute>
  <Execute>
    <Test>pts/qgears2-1.0.1</Test>
    <Arguments>-image TEXT</Arguments>
    <Description>Rendering: CPU-based Raster - Test: Text</Description>
  </Execute>
  <Execute>
    <Test>pts/qgears2-1.0.1</Test>
    <Arguments>-image COMPO</Arguments>
    <Description>Rendering: CPU-based Raster - Test: Image Scaling</Description>
  </Execute>
  <Execute>
    <Test>pts/vkfft-1.2.0</Test>
    <Arguments>-vkfft 0</Arguments>
    <Description>Test: FFT + iFFT C2C 1D batched in single precision</Description>
  </Execute>
  <Execute>
    <Test>pts/vkfft-1.2.0</Test>
    <Arguments>-vkfft 1</Arguments>
    <Description>Test: FFT + iFFT C2C 1D batched in double precision</Description>
  </Execute>
  <Execute>
    <Test>pts/vkfft-1.2.0</Test>
    <Arguments>-vkfft 2</Arguments>
    <Description>Test: FFT + iFFT C2C 1D batched in half precision</Description>
  </Execute>
  <Execute>
    <Test>pts/vkfft-1.2.0</Test>
    <Arguments>-vkfft 3</Arguments>
    <Description>Test: FFT + iFFT C2C multidimensional in single precision</Description>
  </Execute>
  <Execute>
    <Test>pts/vkfft-1.2.0</Test>
    <Arguments>-vkfft 5</Arguments>
    <Description>Test: FFT + iFFT C2C 1D batched in single precision, no reshuffling</Description>
  </Execute>
  <Execute>
    <Test>pts/vkfft-1.2.0</Test>
    <Arguments>-vkfft 6</Arguments>
    <Description>Test: FFT + iFFT R2C / C2R</Description>
  </Execute>
  <Execute>
    <Test>pts/vkfft-1.2.0</Test>
    <Arguments>-vkfft 7</Arguments>
    <Description>Test: FFT + iFFT C2C Bluestein in single precision</Description>
  </Execute>
  <Execute>
    <Test>pts/vkfft-1.2.0</Test>
    <Arguments>-vkfft 8</Arguments>
    <Description>Test: FFT + iFFT C2C Bluestein benchmark in double precision</Description>
  </Execute>
  <Execute>
    <Test>pts/vkmark-1.3.2</Test>
    <Arguments>--size 1920x1080 -p immediate</Arguments>
    <Description>Resolution: 1920 x 1080 - Present Mode: Immediate</Description>
  </Execute>
  <Execute>
    <Test>pts/vkresample-1.0.2</Test>
    <Arguments>-u 2 -p 0</Arguments>
    <Description>Upscale: 2x - Precision: Single</Description>
  </Execute>
  <Execute>
    <Test>pts/vkresample-1.0.2</Test>
    <Arguments>-u 2 -p 1</Arguments>
    <Description>Upscale: 2x - Precision: Double</Description>
  </Execute>
  <Execute>
    <Test>pts/x11perf-1.1.1</Test>
    <Arguments>-putimage500</Arguments>
    <Description>Test: 500px PutImage Square</Description>
  </Execute>
  <Execute>
    <Test>pts/x11perf-1.1.1</Test>
    <Arguments>-scroll500</Arguments>
    <Description>Test: Scrolling 500 x 500 px</Description>
  </Execute>
  <Execute>
    <Test>pts/x11perf-1.1.1</Test>
    <Arguments>-aatrapezoid300</Arguments>
    <Description>Test: Fill 300 x 300px AA Trapezoid</Description>
  </Execute>
  <Execute>
    <Test>pts/x11perf-1.1.1</Test>
    <Arguments>-copywinwin500</Arguments>
    <Description>Test: 500px Copy From Window To Window</Description>
  </Execute>
  <Execute>
    <Test>pts/x11perf-1.1.1</Test>
    <Arguments>-comppixwin500</Arguments>
    <Description>Test: 500px Compositing From Pixmap To Window</Description>
  </Execute>
  <Execute>
    <Test>pts/x11perf-1.1.1</Test>
    <Arguments>-compwinwin500</Arguments>
    <Description>Test: 500px Compositing From Window To Window</Description>
  </Execute>
  <Execute>
    <Test>pts/x11perf-1.1.1</Test>
    <Arguments>-copypixpix500</Arguments>
    <Description>Test: Copy 500x500 From Pixmap To Pixmap</Description>
  </Execute>
  <Execute>
    <Test>pts/x11perf-1.1.1</Test>
    <Arguments>-putimagexy500</Arguments>
    <Description>Test: PutImage XY 500x500 Square</Description>
  </Execute>
  <Execute>
    <Test>pts/x11perf-1.1.1</Test>
    <Arguments>-aa10text</Arguments>
    <Description>Test: Char in 80-char aa line</Description>
  </Execute>
  <Execute>
    <Test>pts/clpeak-1.1.0</Test>
    <Arguments>--global-bandwidth</Arguments>
    <Description>OpenCL Test: Global Memory Bandwidth</Description>
  </Execute>
  <Execute>
    <Test>pts/clpeak-1.1.0</Test>
    <Arguments>--compute-sp</Arguments>
    <Description>OpenCL Test: Single-Precision Compute</Description>
  </Execute>
  <Execute>
    <Test>pts/clpeak-1.1.0</Test>
    <Arguments>--compute-dp</Arguments>
    <Description>OpenCL Test: Double-Precision Compute</Description>
  </Execute>
  <Execute>
    <Test>pts/clpeak-1.1.0</Test>
    <Arguments>--compute-integer</Arguments>
    <Description>OpenCL Test: Integer Compute</Description>
  </Execute>
  <Execute>
    <Test>pts/clpeak-1.1.0</Test>
    <Arguments>--compute-intfast</Arguments>
    <Description>OpenCL Test: Integer 24-bit Compute</Description>
  </Execute>
  <Execute>
    <Test>pts/clpeak-1.1.0</Test>
    <Arguments>--transfer-bandwidth #write</Arguments>
    <Description>OpenCL Test: Transfer Bandwidth enqueueWriteBuffer</Description>
  </Execute>
  <Execute>
    <Test>pts/clpeak-1.1.0</Test>
    <Arguments>--transfer-bandwidth #read</Arguments>
    <Description>OpenCL Test: Transfer Bandwidth enqueueReadBuffer</Description>
  </Execute>
  <Execute>
    <Test>pts/clpeak-1.1.0</Test>
    <Arguments>--kernel-latency</Arguments>
    <Description>OpenCL Test: Kernel Latency</Description>
  </Execute>
  <Execute>
    <Test>pts/dav1d-1.14.0</Test>
    <Arguments>-i summer_nature_1080p.ivf</Arguments>
    <Description>Video Input: Summer Nature 1080p</Description>
  </Execute>
  <Execute>
    <Test>pts/dav1d-1.14.0</Test>
    <Arguments>-i summer_nature_4k.ivf</Arguments>
    <Description>Video Input: Summer Nature 4K</Description>
  </Execute>
  <Execute>
    <Test>pts/dav1d-1.14.0</Test>
    <Arguments>-i chimera_8b_1080p.ivf</Arguments>
    <Description>Video Input: Chimera 1080p</Description>
  </Execute>
  <Execute>
    <Test>pts/dav1d-1.14.0</Test>
    <Arguments>-i chimera_10b_1080p.ivf</Arguments>
    <Description>Video Input: Chimera 1080p 10-bit</Description>
  </Execute>
  <Execute>
    <Test>pts/encode-flac-1.8.1</Test>
  </Execute>
  <Execute>
    <Test>pts/encode-mp3-1.7.4</Test>
  </Execute>
  <Execute>
    <Test>pts/encode-opus-1.4.0</Test>
  </Execute>
  <Execute>
    <Test>pts/encode-wavpack-1.4.1</Test>
  </Execute>
  <Execute>
    <Test>pts/svt-av1-2.10.0</Test>
    <Arguments>--preset 4 -n 160 -i Bosphorus_1920x1080_120fps_420_8bit_YUV.yuv -w 1920 -h 1080</Arguments>
    <Description>Encoder Mode: Preset 4 - Input: Bosphorus 1080p</Description>
  </Execute>
  <Execute>
    <Test>pts/svt-av1-2.10.0</Test>
    <Arguments>--preset 4 -n 160 -i Bosphorus_3840x2160.y4m -w 3840 -h 2160</Arguments>
    <Description>Encoder Mode: Preset 4 - Input: Bosphorus 4K</Description>
  </Execute>
  <Execute>
    <Test>pts/svt-hevc-1.2.1</Test>
    <Arguments>-encMode 1 -i Bosphorus_1920x1080_120fps_420_8bit_YUV.yuv -w 1920 -h 1080</Arguments>
    <Description>Tuning: 1 - Input: Bosphorus 1080p</Description>
  </Execute>
  <Execute>
    <Test>pts/svt-hevc-1.2.1</Test>
    <Arguments>-encMode 1 -i Bosphorus_3840x2160.y4m -w 3840 -h 2160</Arguments>
    <Description>Tuning: 1 - Input: Bosphorus 4K</Description>
  </Execute>
  <Execute>
    <Test>pts/svt-vp9-1.3.1</Test>
    <Arguments>-tune 0 -i Bosphorus_3840x2160.y4m -w 3840 -h 2160</Arguments>
    <Description>Tuning: Visual Quality Optimized - Input: Bosphorus 4K</Description>
  </Execute>
  <Execute>
    <Test>pts/svt-vp9-1.3.1</Test>
    <Arguments>-tune 1 -i Bosphorus_3840x2160.y4m -w 3840 -h 2160</Arguments>
    <Description>Tuning: PSNR/SSIM Optimized - Input: Bosphorus 4K</Description>
  </Execute>
  <Execute>
    <Test>pts/svt-vp9-1.3.1</Test>
    <Arguments>-tune 2 -i Bosphorus_3840x2160.y4m -w 3840 -h 2160</Arguments>
    <Description>Tuning: VMAF Optimized - Input: Bosphorus 4K</Description>
  </Execute>
  <Execute>
    <Test>pts/vpxenc-3.2.0</Test>
    <Arguments>--cpu-used=0 ~/Bosphorus_3840x2160.y4m --width=3840 --height=2160</Arguments>
    <Description>Speed: Speed 0 - Input: Bosphorus 4K</Description>
  </Execute>
  <Execute>
    <Test>pts/vvenc-1.9.1</Test>
    <Arguments>-i Bosphorus_3840x2160.y4m --preset fast</Arguments>
    <Description>Video Input: Bosphorus 4K - Video Preset: Fast</Description>
  </Execute>
  <Execute>
    <Test>pts/x264-2.7.0</Test>
    <Arguments>Bosphorus_3840x2160.y4m</Arguments>
    <Description>Video Input: Bosphorus 4K</Description>
  </Execute>
  <Execute>
    <Test>pts/x265-1.3.0</Test>
    <Arguments>Bosphorus_3840x2160.y4m</Arguments>
    <Description>Video Input: Bosphorus 4K</Description>
  </Execute>
  <Execute>
    <Test>pts/mocassin-1.1.0</Test>
    <Arguments>dust/2D/tau100.0</Arguments>
    <Description>Input: Dust 2D tau100.0</Description>
  </Execute>
  <Execute>
    <Test>pts/mocassin-1.1.0</Test>
    <Arguments>gas/HII40</Arguments>
    <Description>Input: Gas HII40</Description>
  </Execute>
  <Execute>
    <Test>pts/montage-1.0.0</Test>
  </Execute>
  <Execute>
    <Test>pts/n-queens-1.2.1</Test>
  </Execute>
  <Execute>
    <Test>pts/simdjson-2.0.1</Test>
    <Arguments>partial_tweets</Arguments>
    <Description>Throughput Test: PartialTweets</Description>
  </Execute>
  <Execute>
    <Test>pts/simdjson-2.0.1</Test>
    <Arguments>large_random</Arguments>
    <Description>Throughput Test: LargeRandom</Description>
  </Execute>
  <Execute>
    <Test>pts/simdjson-2.0.1</Test>
    <Arguments>kostya</Arguments>
    <Description>Throughput Test: Kostya</Description>
  </Execute>
  <Execute>
    <Test>pts/simdjson-2.0.1</Test>
    <Arguments>distinct_user_id</Arguments>
    <Description>Throughput Test: DistinctUserID</Description>
  </Execute>
  <Execute>
    <Test>pts/simdjson-2.0.1</Test>
    <Arguments>top_tweet</Arguments>
    <Description>Throughput Test: TopTweet</Description>
  </Execute>
  <Execute>
    <Test>pts/viennacl-1.1.0</Test>
    <Arguments>dense_blas-bench-opencl</Arguments>
    <Description>Test: OpenCL BLAS</Description>
  </Execute>
  <Execute>
    <Test>pts/viennacl-1.1.0</Test>
    <Arguments>dense_blas-bench-cpu</Arguments>
    <Description>Test: CPU BLAS</Description>
  </Execute>
  <Execute>
    <Test>pts/xsbench-1.0.0</Test>
  </Execute>
  <Execute>
    <Test>pts/xsbench-cl-1.0.0</Test>
  </Execute>
  <Execute>
    <Test>pts/lammps-1.4.0</Test>
    <Arguments>in.rhodo</Arguments>
    <Description>Model: Rhodopsin Protein</Description>
  </Execute>
  <Execute>
    <Test>pts/lammps-1.4.0</Test>
    <Arguments>benchmark_20k_atoms.in</Arguments>
    <Description>Model: 20k Atoms</Description>
  </Execute>
  <Execute>
    <Test>pts/pennant-1.1.0</Test>
    <Arguments>leblancbig/leblancbig.pnt</Arguments>
    <Description>Test: leblancbig</Description>
  </Execute>
  <Execute>
    <Test>pts/pennant-1.1.0</Test>
    <Arguments>sedovbig/sedovbig.pnt</Arguments>
    <Description>Test: sedovbig</Description>
  </Execute>
  <Execute>
    <Test>pts/openvino-1.2.0</Test>
    <Arguments>-m models/intel/face-detection-0206/FP16/face-detection-0206.xml -d CPU</Arguments>
    <Description>Model: Face Detection FP16 - Device: CPU</Description>
  </Execute>
  <Execute>
    <Test>pts/openvino-1.2.0</Test>
    <Arguments>-m models/intel/face-detection-0206/FP16-INT8/face-detection-0206.xml -d CPU</Arguments>
    <Description>Model: Face Detection FP16-INT8 - Device: CPU</Description>
  </Execute>
  <Execute>
    <Test>pts/openvino-1.2.0</Test>
    <Arguments>-m models/intel/age-gender-recognition-retail-0013/FP16/age-gender-recognition-retail-0013.xml -d CPU</Arguments>
    <Description>Model: Age Gender Recognition Retail 0013 FP16 - Device: CPU</Description>
  </Execute>
  <Execute>
    <Test>pts/openvino-1.2.0</Test>
    <Arguments>-m models/intel/age-gender-recognition-retail-0013/FP16-INT8/age-gender-recognition-retail-0013.xml -d CPU</Arguments>
    <Description>Model: Age Gender Recognition Retail 0013 FP16-INT8 - Device: CPU</Description>
  </Execute>
  <Execute>
    <Test>pts/openvino-1.2.0</Test>
    <Arguments>-m models/intel/person-detection-0106/FP16/person-detection-0106.xml -d CPU</Arguments>
    <Description>Model: Person Detection FP16 - Device: CPU</Description>
  </Execute>
  <Execute>
    <Test>pts/openvino-1.2.0</Test>
    <Arguments>-m models/intel/person-detection-0106/FP32/person-detection-0106.xml -d CPU</Arguments>
    <Description>Model: Person Detection FP32 - Device: CPU</Description>
  </Execute>
  <Execute>
    <Test>pts/openvino-1.2.0</Test>
    <Arguments>-m models/intel/weld-porosity-detection-0001/FP16-INT8/weld-porosity-detection-0001.xml -d CPU</Arguments>
    <Description>Model: Weld Porosity Detection FP16-INT8 - Device: CPU</Description>
  </Execute>
  <Execute>
    <Test>pts/openvino-1.2.0</Test>
    <Arguments>-m models/intel/weld-porosity-detection-0001/FP16/weld-porosity-detection-0001.xml -d CPU</Arguments>
    <Description>Model: Weld Porosity Detection FP16 - Device: CPU</Description>
  </Execute>
  <Execute>
    <Test>pts/openvino-1.2.0</Test>
    <Arguments>-m models/intel/vehicle-detection-0202/FP16-INT8/vehicle-detection-0202.xml -d CPU</Arguments>
    <Description>Model: Vehicle Detection FP16-INT8 - Device: CPU</Description>
  </Execute>
  <Execute>
    <Test>pts/openvino-1.2.0</Test>
    <Arguments>-m models/intel/vehicle-detection-0202/FP16/vehicle-detection-0202.xml -d CPU</Arguments>
    <Description>Model: Vehicle Detection FP16 - Device: CPU</Description>
  </Execute>
  <Execute>
    <Test>pts/openvino-1.2.0</Test>
    <Arguments>-m models/intel/person-vehicle-bike-detection-2004/FP16/person-vehicle-bike-detection-2004.xml -d CPU</Arguments>
    <Description>Model: Person Vehicle Bike Detection FP16 - Device: CPU</Description>
  </Execute>
  <Execute>
    <Test>pts/openvino-1.2.0</Test>
    <Arguments>-m models/intel/machine-translation-nar-en-de-0002/FP16/machine-translation-nar-en-de-0002.xml -d CPU</Arguments>
    <Description>Model: Machine Translation EN To DE FP16 - Device: CPU</Description>
  </Execute>
  <Execute>
    <Test>pts/intel-mpi-1.0.1</Test>
    <Arguments>IMB-MPI1 PingPong</Arguments>
    <Description>Test: IMB-MPI1 PingPong</Description>
  </Execute>
  <Execute>
    <Test>pts/intel-mpi-1.0.1</Test>
    <Arguments>IMB-MPI1 Sendrecv</Arguments>
    <Description>Test: IMB-MPI1 Sendrecv</Description>
  </Execute>
  <Execute>
    <Test>pts/intel-mpi-1.0.1</Test>
    <Arguments>IMB-MPI1 Exchange</Arguments>
    <Description>Test: IMB-MPI1 Exchange</Description>
  </Execute>
  <Execute>
    <Test>pts/intel-mpi-1.0.1</Test>
    <Arguments>IMB-P2P PingPong</Arguments>
    <Description>Test: IMB-P2P PingPong</Description>
  </Execute>
  <Execute>
    <Test>pts/glibc-bench-1.8.0</Test>
    <Arguments>bench-ffsll</Arguments>
    <Description>Benchmark: ffsll</Description>
  </Execute>
  <Execute>
    <Test>pts/glibc-bench-1.8.0</Test>
    <Arguments>bench-ffs</Arguments>
    <Description>Benchmark: ffs</Description>
  </Execute>
  <Execute>
    <Test>pts/glibc-bench-1.8.0</Test>
    <Arguments>bench-pthread_once</Arguments>
    <Description>Benchmark: pthread_once</Description>
  </Execute>
  <Execute>
    <Test>pts/glibc-bench-1.8.0</Test>
    <Arguments>bench-tanh</Arguments>
    <Description>Benchmark: tanh</Description>
  </Execute>
  <Execute>
    <Test>pts/glibc-bench-1.8.0</Test>
    <Arguments>bench-sqrt</Arguments>
    <Description>Benchmark: sqrt</Description>
  </Execute>
  <Execute>
    <Test>pts/glibc-bench-1.8.0</Test>
    <Arguments>bench-sin</Arguments>
    <Description>Benchmark: sin</Description>
  </Execute>
  <Execute>
    <Test>pts/glibc-bench-1.8.0</Test>
    <Arguments>bench-cos</Arguments>
    <Description>Benchmark: cos</Description>
  </Execute>
  <Execute>
    <Test>pts/glibc-bench-1.8.0</Test>
    <Arguments>bench-asinh</Arguments>
    <Description>Benchmark: asinh</Description>
  </Execute>
  <Execute>
    <Test>pts/glibc-bench-1.8.0</Test>
    <Arguments>bench-atanh</Arguments>
    <Description>Benchmark: atanh</Description>
  </Execute>
  <Execute>
    <Test>pts/glibc-bench-1.8.0</Test>
    <Arguments>bench-sincos</Arguments>
    <Description>Benchmark: sincos</Description>
  </Execute>
  <Execute>
    <Test>pts/glibc-bench-1.8.0</Test>
    <Arguments>bench-sinh</Arguments>
    <Description>Benchmark: sinh</Description>
  </Execute>
  <Execute>
    <Test>pts/glibc-bench-1.8.0</Test>
    <Arguments>bench-modf</Arguments>
    <Description>Benchmark: modf</Description>
  </Execute>
  <Execute>
    <Test>pts/glibc-bench-1.8.0</Test>
    <Arguments>bench-exp</Arguments>
    <Description>Benchmark: exp</Description>
  </Execute>
  <Execute>
    <Test>pts/glibc-bench-1.8.0</Test>
    <Arguments>bench-log2</Arguments>
    <Description>Benchmark: log2</Description>
  </Execute>
  <Execute>
    <Test>pts/glibc-bench-1.8.0</Test>
    <Arguments>bench-pow</Arguments>
    <Description>Benchmark: pow</Description>
  </Execute>
  <Execute>
    <Test>pts/sqlite-2.2.0</Test>
    <Arguments>24</Arguments>
    <Description>Threads / Copies: 24</Description>
  </Execute>
  <Execute>
    <Test>pts/openssl-3.1.0</Test>
    <Arguments>rsa4096</Arguments>
    <Description>Algorithm: RSA4096</Description>
  </Execute>
  <Execute>
    <Test>pts/openssl-3.1.0</Test>
    <Arguments>sha256</Arguments>
    <Description>Algorithm: SHA256</Description>
  </Execute>
  <Execute>
    <Test>pts/openssl-3.1.0</Test>
    <Arguments>sha512</Arguments>
    <Description>Algorithm: SHA512</Description>
  </Execute>
  <Execute>
    <Test>pts/openssl-3.1.0</Test>
    <Arguments>-evp aes-128-gcm</Arguments>
    <Description>Algorithm: AES-128-GCM</Description>
  </Execute>
  <Execute>
    <Test>pts/openssl-3.1.0</Test>
    <Arguments>-evp aes-256-gcm</Arguments>
    <Description>Algorithm: AES-256-GCM</Description>
  </Execute>
  <Execute>
    <Test>pts/openssl-3.1.0</Test>
    <Arguments>-evp chacha20</Arguments>
    <Description>Algorithm: ChaCha20</Description>
  </Execute>
  <Execute>
    <Test>pts/openssl-3.1.0</Test>
    <Arguments>-evp chacha20-poly1305</Arguments>
    <Description>Algorithm: ChaCha20-Poly1305</Description>
  </Execute>
</PhoronixTestSuite>
